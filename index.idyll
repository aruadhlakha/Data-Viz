[meta title:"Narrative Visualization" description:"A Study in Racially Motivated Police Attacks" /]

[Header
  fullWidth:true
  title:"Narrative Visualization"
  subtitle:"A Study in Racially Motivated Police Attacks"
  author:"Aarushi Gupta, Aryan Adhlakha, Mayukh Mishra, Shubham Mehta"
  authorLink:"https://idyll-lang.org"
  date:`(new Date()).toDateString()`
  background:"#222222"
  color:"#ffffff"
   /]

## Introduction - To be modified by others

This is an Idyll scrolly-telling post. It is generated via
the file `index.idyll`. To compile this post using
idyll, run the command `idyll` inside of this directory.

Idyll posts are designed to support interaction and
data-driven graphics.

Configuration can be done via the `idyll` field in `package.json`.

[var name:"state" value:0 /]
[var name:"yStart" value:0 /]
[var name:"color" value:"green" /]
[data name:"shooting" source:"shooting.csv" /]
[data name:"shootingBlack" source:"shootingBlack.csv" /]
[data name:"shootingHispanic" source:"shootingHispanic.csv" /]
[data name:"shootingNative" source:"shootingNative.csv" /]
[data name:"shootingOther" source:"shootingOther.csv" /]
[data name:"shootingAsian" source:"shootingAsian.csv" /]


[var name:"colorBy" value:`{}` /]
[var name:"y" value:50 /]

[IdyllVegaLite data:shooting spec:`{
width: 500,
height: 400,
mark: "point",
encoding: {
  x: {
    field: "date",
    type: "nominal",
    axis: {title: "Year"}
  },
  y: {
    field: "count",
    type: "quantitative",
    axis: {title: "Number of deaths"},
    scale: { domain: [0,500] }
  },
  color: colorBy
}
}` /]

Color by:
 [button onClick:`colorBy = {}` ]None[/button]
 [button onClick:`colorBy = {field: 'date', type: 'nominal'}` ]Year[/button]
 [button onClick:`colorBy = {field: 'race', type: 'nominal'}` ]Race[/button]


Killings per racial group:

[IdyllVegaLite data:shootingBlack spec:`{
width: 200,
height: 200,
mark: "line",
encoding: {
  x: {
    field: "date",
    type: "nominal",
    axis: {title: "Year"}
  },
  y: {
    field: "count",
    type: "quantitative",
    axis: {title: "Number of deaths of Blacks"},
    scale: { domain: [100, 500-y] }
  }
},
config: {
  mark: {
    color: "black"
  }
}
}` /]

[IdyllVegaLite data:shootingHispanic spec:`{
width: 200,
height: 200,
mark: "line",
encoding: {
  x: {
    field: "date",
    type: "nominal",
    axis: {title: "Year"}
  },
  y: {
    field: "count",
    type: "quantitative",
    axis: {title: "Number of deaths of Hispanics"},
    scale: { domain: [0, 400-y] }
  }
},
config: {
  mark: {
    color: "brown"
  }
}
}` /]


[IdyllVegaLite data:shootingAsian spec:`{
width: 200,
height: 200,
mark: "line",
encoding: {
  x: {
    field: "date",
    type: "nominal",
    axis: {title: "Year"}
  },
  y: {
    field: "count",
    type: "quantitative",
    axis: {title: "Number of deaths of Asians"},
    scale: { domain: [0, 230-y] }
  }
},
config: {
  mark: {
    color: "yellow"
  }
}
}` /]


[IdyllVegaLite data:shootingNative spec:`{
width: 200,
height: 200,
mark: "line",
encoding: {
  x: {
    field: "date",
    type: "nominal",
    axis: {title: "Year"}
  },
  y: {
    field: "count",
    type: "quantitative",
    axis: {title: "Number of deaths of Natives"},
    scale: { domain: [0, 230-y] }
  }
},
config: {
  mark: {
    color: "red"
  }
}
}` /]

Zoom in:
0 [Range value:y min:0 max:200 /] 100



  [Step]

    ## Markup

    Idyll is based on Markdown.

    You can use familiar syntax
    to create **bold** (`**bold**` ) and *italic* (`*italic*` ) styles,

* lists
* of
* items,

    ```
    * lists
    * of
    * items,
    ```

1. and numbered
2. lists
3. of items,


    ```
    1. and numbered
    2. lists
    3. of items,
    ```

    in addition to [hyperlinks](https://idyll-lang.org) and images:

    ![quill](static/images/quill.svg)

    ```
    ![quill](static/images/quill.svg)
    ```
  [/Step]

  [Step]
    ## Components

    Components can be embedded using a bracket syntax:

    ```
    [Range /]
    ```

    and can contain nested content:

    ```
    [Equation]e = mc^{2}[/Equation]
    ```

    Components accept properties:

    ```
    [Range value:x min:0 max:1 /]
    ```

    that can be bound to variables to achieve interactivity (more in next section).


    A variety of components are included by default. See [all the available components](https://idyll-lang.org/docs/components/). You can also use any html tag, for example: `[div] A div! [/div]`.

    To create your own, add it to the `components/` folder. There are examples of how to use Idyll with React and D3 based components already included.

  [/Step]

  [Step]
    ## Interactivity

    Here is how you can instantiate a variable and bind it to a component:

    [var name:"exampleVar" value:5 /]

    [Range min:0 max:10 value:exampleVar /]
    [Display value:exampleVar /]

    ```
    [var name:"exampleVar" value:5 /]

    [Range min:0 max:10 value:exampleVar /]
    [Display value:exampleVar /]
    ```
  [/Step]


[Scroller]

  [Step]

    ##Scroller

    The `Scroller` component is used to create scroll-based presentations. It can be used to create scrollytelling articles similar to this.
    It takes a property `currentStep` which is updated when the user scrolls to a different step.

    A persistent graphic may also provided using the `Graphic` component in order to create visualizations.

  [/Step]

  [Step]

    ## Learn More

    To learn more see the documentation at [https://idyll-lang.org/docs/](https://idyll-lang.org/docs/),
    join our [chatroom](https://gitter.im/idyll-lang/Lobby), or see the project on [GitHub](https://github.com/idyll-lang/idyll).
  [hr /]

  [/Step]

[/Scroller]

[br/]
# Technical Details

## Installation

- Make sure you have `idyll` installed (`npm i -g idyll`).
- Clone this repo and run `npm install`.

## Developing a post locally

Run `idyll`.

## Building a post for production

Run `idyll build`. The output will appear in the top-level `build` folder. To change the output location, change the `output` option in `package.json`.

## Deploying

Make sure your post has been built, then deploy the docs folder via any static hosting service.

## Dependencies

You can install custom dependencies by running `npm install <package-name> --save`. Note that any collaborators will also need download the package locally by running `npm install` after pulling the changes.
