ggtitle ("Plot of averaged normalized counts of Col replicates")+
geom_smooth()
ggplot (avgVals, aes(x=as.double(Cvi_SpaceFlight), y=as.double(Cvi_Ground)))+
geom_hex() +
ylab ("Ground") + xlab ("Spaceflight") +
ggtitle ("Plot of averaged normalized counts of Cvi replicates")+
geom_smooth()
ggplot (avgVals, aes(x=as.double(Ler_SpaceFlight), y=as.double(Ler_Ground))) +
geom_hex()+
ylab ("Ground") + xlab ("Spaceflight")+
ggtitle ("Plot of averaged normalized counts of Ler replicates")+
geom_smooth()
library(apeglm)
#rna = rna %>% select(-chromosome)
cts = rna %>%
select(-ID) %>%
as.matrix()
rownames(cts) = rna$ID
## create a data frame col_data with the information for each column
## create it from rna to be sure it matches
col_data = tibble( names = names(rna)[-1] ) %>%
separate(names, into = c("ecotype","condition","replicate"), remove = FALSE) %>%
column_to_rownames(var = "names")
dds = DESeqDataSetFromMatrix(countData = cts,colData = col_data, design = ~ ecotype + condition)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
data = read_csv("master 2.csv")
ageAndSuicideRate = data %>%
select (country, year, age, `suicides/100k pop`) %>%
group_by(age, year) %>%
summarize(TotalSuicideRate=sum(`suicides/100k pop`))
ggplot(data = ageAndSuicideRate, aes(x = `year`, y = TotalSuicideRate, color=age)) + geom_point() + facet_wrap(~age) + geom_smooth(method = "lm", color='black') + ylab("Suicides per 100 thousand people") + xlab("Through the years") + ggtitle("Suicide numbers vs Years, for different age groups")
totalDeathsPerAge = ageAndSuicideRate %>%
select(age, TotalSuicideRate) %>%
group_by(age) %>%
summarize(TotalDeaths=sum(TotalSuicideRate)) %>%
mutate(Percentage=paste(as.character(round(TotalDeaths/sum(TotalDeaths)*100)) ,"%"))
ggplot(totalDeathsPerAge, aes(x=age, y=Percentage)) +
geom_bar(stat="identity", width=1, color="white", fill = "light blue") +
ggtitle("Proportion of deaths/age group since 1987 to 2016") + geom_text(aes(label=Percentage), position=position_dodge(width=0.9), vjust=-0.25)
totalDeathsPerAge = ageAndSuicideRate %>%
select(age, TotalSuicideRate) %>%
group_by(age) %>%
summarize(TotalDeaths = sum(TotalSuicideRate)) %>%
mutate(Percentage = paste(as.character(round(TotalDeaths/sum(TotalDeaths)*100)) ,"%")) %>%
mutate(Affected = TotalDeaths/sum(TotalDeaths)*100) %>%
mutate(Unaffected = 100 - Affected) %>%
select(Affected, Unaffected)
chisq.test(totalDeathsPerAge)
sexAndSuicideRate = data %>%
select(sex, `suicides/100k pop`, year) %>%
group_by(sex, year) %>%
summarize(Mean = mean(`suicides/100k pop`)) %>%
pivot_wider(names_from = "sex", values_from = "Mean") %>%
mutate(difference = male - female)
ggplot(data = sexAndSuicideRate) +
geom_point(mapping = aes(x = factor(year), y = difference), stat = "identity") +
xlab("Year") +
ylab("Difference between male and female rates") +
ggtitle("Suicide Rate vs Sex") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sexAndSuicideRate = sexAndSuicideRate %>%
select(male, female)
gdpToSuicideRate = data %>%
select(`suicides/100k pop`, `gdp_per_capita ($)`, age)
ggplot(data = gdpToSuicideRate, aes(x = `gdp_per_capita ($)`, y = `suicides/100k pop`)) + geom_point()  + ylab("Suicides per 100 thousand people") + xlab("GDP per capita") + ggtitle("Suicide counts vs GDP per capita")
ggplot(data = gdpToSuicideRate, aes(x = `gdp_per_capita ($)`, y = `suicides/100k pop`)) + geom_point() + facet_wrap(~age)  + ylab("Suicides per 100 thousand people") + xlab("GDP per capita") + ggtitle("Suicide counts vs GDP per capita separated by age")
gdpToSuicideRate = gdpToSuicideRate %>%
select(`suicides/100k pop`)
chisq.test(gdpToSuicideRate)
generationAndSuicideRate = data %>%
select (country, year, generation, `suicides/100k pop`) %>%
group_by(generation, year) %>%
summarize(TotalSuicideRate=sum(`suicides/100k pop`))
ggplot(data = generationAndSuicideRate, aes(x = `year`, y = TotalSuicideRate, color=generation)) + geom_point() + facet_wrap(~generation) + geom_smooth(method = "lm", color='black') + ylab("Suicides per 100 thousand people") + xlab("Through the years") + ggtitle("Suicide Rate vs Years, for different generations")
totalDeathsPerGeneration = generationAndSuicideRate %>%
select(generation, TotalSuicideRate) %>%
group_by(generation) %>%
summarize(TotalDeaths=sum(TotalSuicideRate)) %>%
mutate(Percentage=paste(as.character(round(TotalDeaths/sum(TotalDeaths)*100)),"%"))
ggplot(totalDeathsPerGeneration, aes(x=generation, y=Percentage)) +
geom_bar(stat="identity", width=1, color="white", fill = "light PINK") +
ggtitle("Proportion of deaths/generation since 1987 to 2016")  + geom_text(aes(label=Percentage), position=position_dodge(width=0.9), vjust=-0.25)
totalDeathsPerGeneration = ageAndSuicideRate %>%
select(age, TotalSuicideRate) %>%
group_by(age) %>%
summarize(TotalDeaths=sum(TotalSuicideRate)) %>%
mutate(Percentage=paste(as.character(round(TotalDeaths/sum(TotalDeaths)*100)) ,"%")) %>%
mutate(Affected=TotalDeaths/sum(TotalDeaths)*100)
totalDeathsPerGeneration = totalDeathsPerGeneration %>%
mutate(Unaffected = 100 - Affected) %>%
select(Affected, Unaffected)
chisq.test(totalDeathsPerGeneration)
## suicide rate for countries per age group
countryAndAge = data %>%
select(country, `suicides/100k pop`, age) %>%
group_by(country, `suicides/100k pop`)
ggplot(countryAndAge, aes(fill = age, y = `suicides/100k pop`, x = country)) +
geom_bar(position = "stack", stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
## suicide rate for countries per generation
countryAndGeneration = data %>%
select(country, `suicides/100k pop`, generation) %>%
group_by(country, `suicides/100k pop`)
ggplot(countryAndGeneration, aes(fill = generation, y = `suicides/100k pop`, x = country)) +
geom_bar(position = "stack", stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
## suicide rate for countries year-wise
countryAndYear = data %>%
select(country, `suicides/100k pop`, year) %>%
group_by(country, `suicides/100k pop`)
ggplot(countryAndYear, aes(fill = year, y = `suicides/100k pop`, x = country)) +
geom_bar(position = "stack", stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
populationsByYear = data %>%
select(year, suicides_no, population) %>%
group_by(year) %>%
summarize(affected = sum(suicides_no),
pop = sum(population)) %>%
mutate(percent = 100 * affected / pop) %>%
select(year, percent)
ggplot(data = populationsByYear, aes(x = factor(year), y = percent)) + geom_point() + ylab("Percentage of world population affected") + xlab("Year") + ggtitle("Percentage vs. Year")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
populationsByYear = populationsByYear %>%
select(percent)
chisq.test(populationsByYear)
model1 <- lm(suicide_per_100k ~ gdp_per_capita, data = country_mean_gdp)
View(gdpToSuicideRate)
View(gdpToSuicideRate)
gdpToSuicideRate = data %>%
select(`suicides/100k pop`, `gdp_per_capita ($)`, age)
ggplot(data = gdpToSuicideRate, aes(x = `gdp_per_capita ($)`, y = `suicides/100k pop`)) + geom_point()  + ylab("Suicides per 100 thousand people") + xlab("GDP per capita") + ggtitle("Suicide counts vs GDP per capita")
ggplot(data = gdpToSuicideRate, aes(x = `gdp_per_capita ($)`, y = `suicides/100k pop`)) + geom_point() + facet_wrap(~age)  + ylab("Suicides per 100 thousand people") + xlab("GDP per capita") + ggtitle("Suicide counts vs GDP per capita separated by age")
gdpToSuicideRate2 = gdpToSuicideRate %>%
select(`suicides/100k pop`)
chisq.test(gdpToSuicideRate2)
View(gdpToSuicideRate)
model1 <- lm(suicide/100k ~ gdp_per_capita, data = gdpToSuicideRate)
model1 <- lm('suicide/100k pop'~ gdp_per_capita, data = gdpToSuicideRate)
View(gdpToSuicideRate)
model1 <- lm('suicides/100k pop'~ gdp_per_capita, data = gdpToSuicideRate)
model1 <- lm('suicides/100kpop'~ gdp_per_capita, data = gdpToSuicideRate)
names(gdpToSuicideRate)= c("suicideRate","gdp_per_capita")
model1 <- lm('suicides/100kpop'~ gdp_per_capita, data = gdpToSuicideRate)
model1 <- lm(suicideRate~ gdp_per_capita, data = gdpToSuicideRate)
summary(model1)
View(gdpToSuicideRate)
gdpToSuicideRate = data %>%
select (`suicides/100k pop`, `gdp_per_capita ($)`) %>%
drop_na() %>%
group_by(country) %>%
summarize(gdpMean=mean(`gdp_per_capita ($)`), ratesMean=mean(`suicides/100k pop`))
View(data)
gdpToSuicideRate = data %>%
select (country,`suicides/100k pop`, `gdp_per_capita ($)`) %>%
drop_na() %>%
group_by(country) %>%
summarize(gdpMean=mean(`gdp_per_capita ($)`), ratesMean=mean(`suicides/100k pop`))
View(gdpToSuicideRate)
names (gdpToSuicideRate) = c("Country", "gdp_per_capita","suicideRate")
names (gdpToSuicideRate) = c("Country", "gdp_per_capita","suicideRate")
model1 <- lm(suicideRate ~ gdp_per_capita, data = gdpToSuicideRate)
summary(model1)
country_mean_gdp <- data %>%
group_by(country, continent) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(gdp_per_capita))
View(data)
country_mean_gdp <- data %>%
group_by(country) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(gdp_per_capita))
country_mean_gdp <- data %>%
group_by(country) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(`gdp_per_capita ($)`))
model1 <- lm(suicideRate ~ gdp_per_capita, data = country_mean_gdp)
model1 <- lm(suicides_per_100k ~ gdp_per_capita, data = country_mean_gdp)
country_mean_gdp <- data %>%
group_by(country) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(`gdp_per_capita ($)`))
View(country_mean_gdp)
model1 <- lm(suicide_per_100k ~ gdp_per_capita, data = country_mean_gdp)
summary(model1)
gdp_suicide_no_outliers <- model1 %>%
augment() %>%
arrange(desc(.cooksd)) %>%
filter(.cooksd < 4/nrow(.)) %>% # removes 5/93 countries
inner_join(country_mean_gdp, by = c("suicide_per_100k", "gdp_per_capita")) %>%
select(country, continent, gdp_per_capita, suicide_per_100k)
install.packages("msm")
library(msm)
library(msm)
country_mean_gdp <- data %>%
group_by(country) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(`gdp_per_capita ($)`))
#gdpToSuicideRate = data %>%
#  select (country,`suicides/100k pop`, `gdp_per_capita ($)`) %>%
# drop_na() %>%
#  group_by(country) %>%
#  summarize(gdpMean=mean(`gdp_per_capita ($)`), ratesMean=mean(`suicides/100k pop`))
model1 <- lm(suicide_per_100k ~ gdp_per_capita, data = country_mean_gdp)
gdp_suicide_no_outliers <- model1 %>%
augment() %>%
arrange(desc(.cooksd)) %>%
filter(.cooksd < 4/nrow(.)) %>% # removes 5/93 countries
inner_join(country_mean_gdp, by = c("suicide_per_100k", "gdp_per_capita")) %>%
select(country, continent, gdp_per_capita, suicide_per_100k)
library(msm)
?augment
library(broom)
library(broom)
country_mean_gdp <- data %>%
group_by(country) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(`gdp_per_capita ($)`))
#gdpToSuicideRate = data %>%
#  select (country,`suicides/100k pop`, `gdp_per_capita ($)`) %>%
# drop_na() %>%
#  group_by(country) %>%
#  summarize(gdpMean=mean(`gdp_per_capita ($)`), ratesMean=mean(`suicides/100k pop`))
model1 <- lm(suicide_per_100k ~ gdp_per_capita, data = country_mean_gdp)
gdp_suicide_no_outliers <- model1 %>%
augment() %>%
arrange(desc(.cooksd)) %>%
filter(.cooksd < 4/nrow(.)) %>% # removes 5/93 countries
inner_join(country_mean_gdp, by = c("suicide_per_100k", "gdp_per_capita")) %>%
select(country, continent, gdp_per_capita, suicide_per_100k)
gdp_suicide_no_outliers <- model1 %>%
augment() %>%
arrange(desc(.cooksd)) %>%
filter(.cooksd < 4/nrow(.)) %>% # removes 5/93 countries
inner_join(country_mean_gdp, by = c("suicide_per_100k", "gdp_per_capita")) %>%
select(country, gdp_per_capita, suicide_per_100k)
model2 <- lm(suicide_per_100k ~ gdp_per_capita, data = gdp_suicide_no_outliers)
summary(model2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
data = read_csv("master 2.csv")
ageAndSuicideRate = data %>%
select (country, year, age, `suicides/100k pop`) %>%
group_by(age, year) %>%
summarize(TotalSuicideRate=sum(`suicides/100k pop`))
ggplot(data = ageAndSuicideRate, aes(x = `year`, y = TotalSuicideRate, color=age)) + geom_point() + facet_wrap(~age) + geom_smooth(method = "lm", color='black') + ylab("Suicides per 100 thousand people") + xlab("Through the years") + ggtitle("Suicide numbers vs Years, for different age groups")
totalDeathsPerAge = ageAndSuicideRate %>%
select(age, TotalSuicideRate) %>%
group_by(age) %>%
summarize(TotalDeaths=sum(TotalSuicideRate)) %>%
mutate(Percentage=paste(as.character(round(TotalDeaths/sum(TotalDeaths)*100)) ,"%"))
ggplot(totalDeathsPerAge, aes(x=age, y=Percentage)) +
geom_bar(stat="identity", width=1, color="white", fill = "light blue") +
ggtitle("Proportion of deaths/age group since 1987 to 2016") + geom_text(aes(label=Percentage), position=position_dodge(width=0.9), vjust=-0.25)
totalDeathsPerAge = ageAndSuicideRate %>%
select(age, TotalSuicideRate) %>%
group_by(age) %>%
summarize(TotalDeaths = sum(TotalSuicideRate)) %>%
mutate(Percentage = paste(as.character(round(TotalDeaths/sum(TotalDeaths)*100)) ,"%")) %>%
mutate(Affected = TotalDeaths/sum(TotalDeaths)*100) %>%
mutate(Unaffected = 100 - Affected) %>%
select(Affected, Unaffected)
chisq.test(totalDeathsPerAge)
sexAndSuicideRate = data %>%
select(sex, `suicides/100k pop`, year) %>%
group_by(sex, year) %>%
summarize(Mean = mean(`suicides/100k pop`)) %>%
pivot_wider(names_from = "sex", values_from = "Mean") %>%
mutate(difference = male - female)
ggplot(data = sexAndSuicideRate) +
geom_point(mapping = aes(x = factor(year), y = difference), stat = "identity") +
xlab("Year") +
ylab("Difference between male and female rates") +
ggtitle("Suicide Rate vs Sex") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
sexAndSuicideRate = sexAndSuicideRate %>%
select(male, female)
gdpToSuicideRate = data %>%
select(`suicides/100k pop`, `gdp_per_capita ($)`, age)
ggplot(data = gdpToSuicideRate, aes(x = `gdp_per_capita ($)`, y = `suicides/100k pop`)) + geom_point()  + ylab("Suicides per 100 thousand people") + xlab("GDP per capita") + ggtitle("Suicide counts vs GDP per capita")
ggplot(data = gdpToSuicideRate, aes(x = `gdp_per_capita ($)`, y = `suicides/100k pop`)) + geom_point() + facet_wrap(~age)  + ylab("Suicides per 100 thousand people") + xlab("GDP per capita") + ggtitle("Suicide counts vs GDP per capita separated by age")
gdpToSuicideRate2 = gdpToSuicideRate %>%
select(`suicides/100k pop`)
chisq.test(gdpToSuicideRate2)
library(broom)
country_mean_gdp <- data %>%
group_by(country) %>%
summarize(suicide_per_100k = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(`gdp_per_capita ($)`))
#gdpToSuicideRate = data %>%
#  select (country,`suicides/100k pop`, `gdp_per_capita ($)`) %>%
# drop_na() %>%
#  group_by(country) %>%
#  summarize(gdpMean=mean(`gdp_per_capita ($)`), ratesMean=mean(`suicides/100k pop`))
model1 <- lm(suicide_per_100k ~ gdp_per_capita, data = country_mean_gdp)
gdp_suicide_no_outliers <- model1 %>%
augment() %>%
arrange(desc(.cooksd)) %>%
filter(.cooksd < 4/nrow(.)) %>% # removes 5/93 countries
inner_join(country_mean_gdp, by = c("suicide_per_100k", "gdp_per_capita")) %>%
select(country, gdp_per_capita, suicide_per_100k)
model2 <- lm(suicide_per_100k ~ gdp_per_capita, data = gdp_suicide_no_outliers)
summary(model2)
generationAndSuicideRate = data %>%
select (country, year, generation, `suicides/100k pop`) %>%
group_by(generation, year) %>%
summarize(TotalSuicideRate=sum(`suicides/100k pop`))
ggplot(data = generationAndSuicideRate, aes(x = `year`, y = TotalSuicideRate, color=generation)) + geom_point() + facet_wrap(~generation) + geom_smooth(method = "lm", color='black') + ylab("Suicides per 100 thousand people") + xlab("Through the years") + ggtitle("Suicide Rate vs Years, for different generations")
totalDeathsPerGeneration = generationAndSuicideRate %>%
select(generation, TotalSuicideRate) %>%
group_by(generation) %>%
summarize(TotalDeaths=sum(TotalSuicideRate)) %>%
mutate(Percentage=paste(as.character(round(TotalDeaths/sum(TotalDeaths)*100)),"%"))
ggplot(totalDeathsPerGeneration, aes(x=generation, y=Percentage)) +
geom_bar(stat="identity", width=1, color="white", fill = "light PINK") +
ggtitle("Proportion of deaths/generation since 1987 to 2016")  + geom_text(aes(label=Percentage), position=position_dodge(width=0.9), vjust=-0.25)
totalDeathsPerGeneration = ageAndSuicideRate %>%
select(age, TotalSuicideRate) %>%
group_by(age) %>%
summarize(TotalDeaths=sum(TotalSuicideRate)) %>%
mutate(Percentage=paste(as.character(round(TotalDeaths/sum(TotalDeaths)*100)) ,"%")) %>%
mutate(Affected=TotalDeaths/sum(TotalDeaths)*100)
totalDeathsPerGeneration = totalDeathsPerGeneration %>%
mutate(Unaffected = 100 - Affected) %>%
select(Affected, Unaffected)
chisq.test(totalDeathsPerGeneration)
## suicide rate for countries per age group
countryAndAge = data %>%
select(country, `suicides/100k pop`, age) %>%
group_by(country, `suicides/100k pop`)
ggplot(countryAndAge, aes(fill = age, y = `suicides/100k pop`, x = country)) +
geom_bar(position = "stack", stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
## suicide rate for countries per generation
countryAndGeneration = data %>%
select(country, `suicides/100k pop`, generation) %>%
group_by(country, `suicides/100k pop`)
ggplot(countryAndGeneration, aes(fill = generation, y = `suicides/100k pop`, x = country)) +
geom_bar(position = "stack", stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
## suicide rate for countries year-wise
countryAndYear = data %>%
select(country, `suicides/100k pop`, year) %>%
group_by(country, `suicides/100k pop`)
ggplot(countryAndYear, aes(fill = year, y = `suicides/100k pop`, x = country)) +
geom_bar(position = "stack", stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
populationsByYear = data %>%
select(year, suicides_no, population) %>%
group_by(year) %>%
summarize(affected = sum(suicides_no),
pop = sum(population)) %>%
mutate(percent = 100 * affected / pop) %>%
select(year, percent)
ggplot(data = populationsByYear, aes(x = factor(year), y = percent)) + geom_point() + ylab("Percentage of world population affected") + xlab("Year") + ggtitle("Percentage vs. Year")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
populationsByYear = populationsByYear %>%
select(percent)
chisq.test(populationsByYear)
library(broom)
countryGdp <- data %>%
group_by(country) %>%
summarize(suicideRate = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(`gdp_per_capita ($)`))
#gdpToSuicideRate = data %>%
#  select (country,`suicides/100k pop`, `gdp_per_capita ($)`) %>%
# drop_na() %>%
#  group_by(country) %>%
#  summarize(gdpMean=mean(`gdp_per_capita ($)`), ratesMean=mean(`suicides/100k pop`))
model1 <- lm(suicideRate ~ gdp_per_capita, data = country_mean_gdp)
library(broom)
countryGdp <- data %>%
group_by(country) %>%
summarize(suicideRate = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(`gdp_per_capita ($)`))
#gdpToSuicideRate = data %>%
#  select (country,`suicides/100k pop`, `gdp_per_capita ($)`) %>%
# drop_na() %>%
#  group_by(country) %>%
#  summarize(gdpMean=mean(`gdp_per_capita ($)`), ratesMean=mean(`suicides/100k pop`))
model1 <- lm(suicideRate ~ gdp_per_capita, data = country_mean_gdp)
library(broom)
countryGdp <- data %>%
group_by(country) %>%
summarize(suicideRate = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(`gdp_per_capita ($)`))
#gdpToSuicideRate = data %>%
#  select (country,`suicides/100k pop`, `gdp_per_capita ($)`) %>%
# drop_na() %>%
#  group_by(country) %>%
#  summarize(gdpMean=mean(`gdp_per_capita ($)`), ratesMean=mean(`suicides/100k pop`))
model1 <- lm(suicideRate ~ gdp_per_capita, data = countryGdp)
gdp_suicide_no_outliers <- model1 %>%
augment() %>%
arrange(desc(.cooksd)) %>%
filter(.cooksd < 4/nrow(.)) %>% # removes 5/93 countries
inner_join(countryGdp, by = c("suicideRate", "gdp_per_capita")) %>%
select(country, gdp_per_capita, suicide_per_100k)
library(broom)
countryGdp <- data %>%
group_by(country) %>%
summarize(suicideRate = (sum(as.numeric(suicides_no)) / sum(as.numeric(population))) * 100000,
gdp_per_capita = mean(`gdp_per_capita ($)`))
#gdpToSuicideRate = data %>%
#  select (country,`suicides/100k pop`, `gdp_per_capita ($)`) %>%
# drop_na() %>%
#  group_by(country) %>%
#  summarize(gdpMean=mean(`gdp_per_capita ($)`), ratesMean=mean(`suicides/100k pop`))
model1 <- lm(suicideRate ~ gdp_per_capita, data = countryGdp)
gdp_suicide_no_outliers <- model1 %>%
augment() %>%
arrange(desc(.cooksd)) %>%
filter(.cooksd < 4/nrow(.)) %>% # removes 5/93 countries
inner_join(countryGdp, by = c("suicideRate", "gdp_per_capita")) %>%
select(country, gdp_per_capita, suicideRate)
model2 <- lm(suicideRate ~ gdp_per_capita, data = gdp_suicide_no_outliers)
summary(model2)
install.packages("smwrData")
update.packages()
install.packages("glmtools")
install.packages("ggplot2")
library(ggplot2)
library(devtools)
devtools::install_git(https://github.com/robertladwig/glmtools.git)
devtools::install_git("https://github.com/robertladwig/glmtools.git"")
afaf
;
.
)
exit
;
for
i
;
read_nml  <-	function(nml_file = 'template'){
nml_file <- nml_path_norm(nml_file)
if (!ascii_only(nml_file)){
stop('non-ASCII characters found in nml file on line ', what_ascii(nml_file))
}
# skip all commented lines, return all variables and associated values
# requires NO return line variables (all variables must be completely defined on a single line)
c <- file(nml_file,"r")
fileLines <- readLines(c)
close(c)
lineStart	<-	substr(fileLines,1,1)
# ignore comment lines or empty lines
ignoreLn	<-	lineStart=='!' | fileLines==""
lineStart	<-	lineStart[!ignoreLn]
fileLines	<-	fileLines[!ignoreLn]
# find all lines which start with "&" * requires FIRST char to be value
lineIdx		<- seq(1,length(lineStart))
blckOpen	<-	lineIdx[lineStart=="&"]
blckClse	<-	lineIdx[lineStart=="/"]
nml <- list()
for (i in seq_len(length(blckOpen))){
blckName   <-	substr(fileLines[blckOpen[i]],
2, nchar(fileLines[blckOpen[i]]))
blckName   <- gsub("\\s", "", blckName)
oldNms	   <-	names(nml)
nml[[i]]   <-	list()
names(nml) <-	c(oldNms,blckName)
carryover <- ''
for (j in (blckOpen[i]+1):(blckClse[i]-1)){
textLine	<-	paste(carryover,
gsub("\t", "", gsub(" ", "", fileLines[j])), sep = '')
if(substr(textLine, 1, 1) != '!'){
# Add a check here, sometimes, if there is a hanging comma,
#and only sometimes that means add next row
if(substr(textLine, nchar(textLine), nchar(textLine)) == ',' &&
j+1 <= length(fileLines) &&
!any(grep("=", fileLines[j + 1])) &&
!any(grep("/", fileLines[j + 1]))){
carryover = textLine
next
}else{
carryover = ''
}
# else, line is commented out
lineVal	  <-	buildVal(textLine, lineNum = j, blckName)
nml[[i]]	<-	c(nml[[i]], lineVal)
}
}
}
nml <- .nml(nml)
return(nml)
}
#' @importFrom GLM3r nml_template_path
nml_path_norm <- function(nml_file){
if (nml_file == "template"){
nml_file <- GLM3r::nml_template_path()
}
if (!is_nml_file(nml_file)){
stop(nml_file, ' is not of file type *.nml')
}
return(nml_file)
}
aed_nml <- read_nml("/home/aryan/Documents/Testing/aed2/aed2.nml")
install.packages("glmtools")
devtools::install_github("aemon-j/FLakeR", ref = "inflow")
devtools::install_github("aemon-j/GOTMr")
devtools::install_github("aemon-j/gotmtools")
1.
1
devtools::install_github("GLEON/rLakeAnalyzer")
devtools::install_github("aemon-j/LakeEnsemblR")
1
x<- cbind(2,"New York",40.71455, -74.007124)
rownames(X)
rownames(x)
rownames(x)<-c("years","place","lat","lon")
colnames(x)<-c("years","place","lat","lon")
x
setwd("~/Desktop/Data Viz /Idyll demo/Data-Viz/components")
write.csv(x, "cities-lived.csv")
